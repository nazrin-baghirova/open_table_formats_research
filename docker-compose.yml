version: "3"
services:
  spark:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spark-hudi-delta-iceberg
    ports:
      - "7888:8888"
      - "4041:4041"
      - "4040:4040"
      - "18080:18080"
    volumes:
      - ./app:/home/sparkuser/app
      - ./app/event_logs:/home/spark/event_logs
      - /var/run/docker.sock:/var/run/docker.sock
    command: jupyter
    depends_on:
      - minio
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - S3_ENDPOINT=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - SPARK_DRIVER_MEMORY=2G
      - SPARK_WORKER_MEMORY=2G
      - SPARK_EXECUTOR_MEMORY=2G
      - SPARK_LOCAL_IP=0.0.0.0
    restart: unless-stopped


  # rest:
  #   image: apache/iceberg-rest-fixture
  #   container_name: iceberg-rest
  #   ports:
  #     - 8181:8181
  #   environment:
  #     - AWS_ACCESS_KEY_ID=minioadmin
  #     - AWS_SECRET_ACCESS_KEY=minioadmin
  #     - AWS_REGION=us-east-1
  #     - CATALOG_WAREHOUSE=s3://warehouse/
  #     - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
  #     - CATALOG_S3_ENDPOINT=http://minio:9000

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"  # Minio Console
    volumes:
      - ./minio/data:/data  # Persistent storage
      - ./minio/config:/root/.minio  # Configurations
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin

  # mc:
  #   depends_on:
  #     - minio
  #   image: minio/mc
  #   container_name: mc
  #   environment:
  #     - AWS_ACCESS_KEY_ID=minioadmin
  #     - AWS_SECRET_ACCESS_KEY=minioadmin
  #     - AWS_REGION=us-east-1
  #   entrypoint: |
  #     /bin/sh -c "
  #     until (/usr/bin/mc alias set minio http://minio:9000 minioadmin minioadmin); do
  #       echo 'Waiting for MinIO to be ready...' && sleep 1;
  #     done;
  #     if ! /usr/bin/mc ls minio/warehouse > /dev/null 2>&1; then
  #       /usr/bin/mc mb minio/warehouse;
  #       /usr/bin/mc policy set public minio/warehouse;
  #     fi;
  #     tail -f /dev/null;
  #     "

